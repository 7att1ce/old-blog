[{"title":"数据库实验","date":"2021-05-25T10:46:06.000Z","url":"/2021/05/25/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C/","categories":[["undefined",""]],"content":"实验一创建表 查询操作"},{"title":"算法实验","date":"2021-05-25T02:46:47.000Z","url":"/2021/05/25/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C/","categories":[["undefined",""]],"content":"实验一 排序 问题及解决方案: 随机数生成: 用a[i]=i,random_shuffle代替简单rand生成所需数据集 时间统计错误: 先是数组复制有误, 导致第二和第三次排序的数组是已排好的数组; 然后是编译时加上-O2可获得预期结果 代码: 实验二 找第k个小 代码 "},{"title":"数据库系统概论","date":"2021-05-24T00:36:24.000Z","url":"/2021/05/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/","categories":[["undefined",""]]},{"title":"WP收集","date":"2021-05-21T07:14:20.000Z","url":"/2021/05/21/WP%E6%94%B6%E9%9B%86/","categories":[["undefined",""]],"content":" 第四届红帽杯 "},{"title":"津门杯 2021 misc wp","date":"2021-05-20T04:16:20.000Z","url":"/2021/05/20/%E6%B4%A5%E9%97%A8%E6%9D%AF-2021-misc-wp/","categories":[["undefined",""]],"content":"0x00 m0usb wireshark查看流量包为usb捕获，tshark提取按键内容 幂数加密解密得flag flag&#123;THISISFLAG&#125; 0x01 m1bmp lsb隐写，stegsolve查看可得base64编码字符串，解密得flag。 flag&#123;l5DGqF1pPzOb2LU919LMaBYS5B1G01FD&#125; 0x02 tunnel wireshark查看DNS隧道，根据query可得一些base64编码字符串 提取字符串 vscode去掉zip.txt中的.evil.im，解密并拼接得加密的zip文件 对base64字符串进行base64隐写解密，得到压缩包密码(感谢wjm大佬提供的脚本) 解压flag.zip得到flag.png，flag在图片中，注意要去掉单引号 flag&#123;D01nt_5pY_0nmE&#125; "},{"title":"数论","date":"2021-05-19T13:28:25.000Z","url":"/2021/05/19/%E6%95%B0%E8%AE%BA/","categories":[["undefined",""]],"content":"第1章 整数的可除性1.1 整除的概念 若, , 则(传递性) 若, , 则, 且对任意整数s, t, 有. 推论: 若, 则对任意整数, 有 若, , 则 1.2 欧几里得除法 , q叫做a被b除所得的不完全商, r叫做余数 最小非负余数: , 最小正余数: , 最大非正余数: , 最大负余数: , 绝对值最小余数: 或 1.3 整数的表示 设b是大于1的正整数, 则对任意正整数n都可唯一地表成, 其中是整数, , 且首项系数, 称为整数的进制表示 每个正整数都可以表示成不同的2的幂的和(即二进制) 1.4 最大公因数与广义欧几里得除法 记作这些数的最大公因数, 称这些数互素或互质(最大公因数的定义留意一下, 可能证明要用) , 且对所有公因数也成立 求, 广义欧几里得除法, 即辗转相除法 贝祖等式: 设a, b是任意两个整数, 则存在整数s, t使得 存在整数s, t, 使得 , , , 则 若a被b除的最小正余数是r, 则被除的最小正余数是 ; ; . 推论: 且 p是素数, 若, 则或 若, , 则. 推广: . 推论: p是素数, , 则某个 1.5 最小公倍数 最小公倍数记作(定义留意一下) 则; . 推广: 两两互素, 则 ; . 推论: , 则 若m是的公倍数, 则 1.6 素数及其判别法 设n是一个正合数, p是n的一个大于1的最小正因数, 则p是素数, 且 设n是一个正整数, 如果对所有的素数, 都有, 则n是素数 素数的判别法(Eratosthenes筛法): 求不超过n的一切素数, 只需把不超过的素数的背书划去即可 要划掉素数p的倍数, 可以从开始划起 判断素数方法: 对于整数N, 先求出不超过的所有素数, 若这些素数都不能整除N, 则N为素数, 否则N为合数 1.7 素数与算术基本定理 算术基本定理: 任意整数都可唯一地表示为素数的乘积, 即. 将n的分解式标准化为(注: 有时为了应用方便会插入若干素数的零次幂, 即) , 则 , , 则 1.8 素数定理 素数的个数是无限的 素数分布特点: 越往后越稀, 分布极不规则 第2章 同余2.1 同余的基本概念与性质 同余定义: , 则a, b叫做模m同余, 记作 的充要条件是存在整数k, 使得或a, b被m除的余数相同 模同余是等价关系, 即: 若, 则 若, , 则 若, , 则, , 若, , , 则 整数能被3或9整除的判断方法: 将整数十进制表示, 求位数之和并判断是否能被3或9整除 整数能被7(或11, 或13)整除的判断方法: 整数1000进制表示, 判断 是否能被7(或11, 或13)整除 , 若, 则 , 若, 则 (“模大的成立, 模小的也成立”) , 则; 特别地, 若两两互素, 则 , 则, 因而若d能整除m以及a, b二者之一, 则d必然能整除a, b中的另一个 证明同余式的一般方法: , 把同余式译为等式, 运算后又将等式译为同余式 验算整数计算结果的方法: 弃九法 2.2 剩余类与完全剩余系 叫做模m的a的剩余类, 即这类数模m同余, 余数是a. 一个剩余类中的任一数叫做该类的剩余或代表元. 若m个整数中任何两个数都不在同一个剩余类里, 则这m个数的集合叫做模m的一个完全剩余系 几类特殊的完全剩余系: 最小非负完全剩余系, 最小正完全剩余系, 最大非正完全剩余系, 最大负完全剩余系, 绝对值最小完全剩余系 任一整数比包含在一个中, ; ; m个连续整数是模m的完全剩余系 m个整数为模m的一个完全剩余系的充要条件是 设m是正整数, , b是任意整数, 若x遍历模m的一个完全剩余系, 则也遍历模m的一个完全剩余系 若, 而分别遍历模的完全剩余系, 则遍历模的完全剩余系 2.3 简化剩余系与欧拉函数 设m是一个正整数, 则m个整数中与m互素的整数个数, 记作, 通常称为欧拉函数 如果模m的剩余类里面的数与m互素, 就把这个类叫做一个与模m互素的剩余类(又称简化剩余类) 设m是一个正整数, 在模m的所有不同简化剩余类中, 从每一个类任取一个数组成的整数的集合, 叫做摸m的一个简化剩余系 设是同一个模m剩余类的两个剩余, 则 几类特殊的简化剩余系: 最小非负简化剩余系, 最小正简化剩余系, 最大非正简化剩余系, 最大负简化剩余系, 绝对值最小简化剩余系 设m是一个正整数, , 且, 则是模m的一个简化剩余系 设m是一个正整数, , 若x遍历模m的简化剩余系, 则ax也遍历模m的简化剩余系 设m是一个正整数, , 则存在整数a’, , 使得 若, 而分别遍历模的简化剩余系, 则遍历模的简化剩余系 当p为素数时, 若, 则 欧拉函数的一般计算: 设n的标准分解式, 则 若p, q是不同的素数, 则 设n是一个正整数, 则, 其中表示对n的所有正因数求和 2.4 欧拉定理, 费马小定理 欧拉定理: 设m是大于1的整数, , 则 费马小定理: 设p是素数, 则对任和整数a, 有 Wilson定理: 设p是一个素数, 则 2.5 模重复平方计算法 平方-乘运算: 每次乘法运算后进行取模运算: 重复平方: 如 第3章 同余式3.1 基本概念及一次同余式 设m是一个正整数, , 其中是整数, 则叫做模m的同余式, 若, 则n叫做f(x)的次数, 记为degf, 上式又叫做模m的n次同余式. 如果存在a使得, 则叫做同余式的一个解 , 有解, 解数为 设m是一个正整数, , 则有唯一解, 称a叫做模m可逆元, a’叫做a的模m逆元, 记作 模简化剩余的一个等价描述: 设m是一个正整数, 则整数a是模m简化剩余的充要条件是整数a是模m可逆元 3.2 中国剩余定理 一次同余式组: , 如果存在使得, 则为一个解 中国剩余定理: 设是k个两两互素的正整数, 则对任意, 同余式组有唯一解, 其中, , 3.3 高次同余式的解数及解法 若, , , 则同余式与同余式组等价. 且若的解数是, 则的解数是 第4章 二次同余式与平方剩余4.1 一般二次同余式 二次同余式一般形式: , m可分解为, 因此只讨论模为素数幂的同余式, , . 令, , 上个同余式可等价为 二次剩余: 形如的同余式, 其中, . 同余式有解则a成为模p的二次剩余(或平方剩余), 否则成为二次非剩余 4.2 模为奇素数(即除了2以外的素数)的平方剩余与平方非剩余 欧拉判别条件(, ): a是模p的二次剩余的充要条件: a是模p的二次非剩余的充要条件: 设p为奇素数, , , 则: 若, 都是模p的二次剩余或都是模p的二次非剩余, 则是模p的二次剩余 若是模p的二次剩余, 若是模p的二次非剩余, 则是模p的二次非剩余 在模p的简化剩余系中, 二次剩余个数等于二次非剩余个数, 为. 且二次剩余为. 二次剩余个数等于同余式解个数 对于素数, 有解有解 4.3 勒让德符号 设p为素数, 定义勒让德符号为如下: (a是模p的二次剩余); (a是模p的二次非剩余); (). 有解; 无解 (欧拉判别法)设p是奇素数, 则对于任意整数a, 设p是奇素数: ; ; =1(); =-1() 设p是奇素数: ; ; ; 设, 则 设p是奇素数, 若, 则; 若, 则 设p是奇素数, 4.4 二次互反律 若p及q是互素的奇素数, 则 4.5 雅可比符号 设是奇素数的乘积, 对于任意整数a, 定义雅可比符号为 雅可比符号意义: 对于, 有有解, 无解. 雅可比符号为-1, 可以判断a是模m二次非剩余, 但雅可比符号为1不能判断a是模m二次剩余 设m为正奇数, 则: ; ; 设, 则; 若, 则 设m是正奇数, 则; ; 雅可比符号的二次互反律也成立 第5章 原根与指标5.1 指数及其基本性质 设是整数, a是与m互素的正整数, 则使得成立的最小正整数e叫做a对模m的指数, 记作, 如果a对模m的指数是, 则a叫做模m的原根 什么时候存在原根? 即: 存在a, 使得 如何求原根? 即: 如何求满足上述条件的a 设, , 则整数d使得的充要条件是 设, , 则 设p奇素数, 且也是素数, 如果, 且a不是1的模p二次同余根, 则或 设 若, 则 设使得, 则 设, 则模m两两不同余. 特别地, 当a是模m的原根, 即时, 这个数组成模m的简化剩余系 设, 则 设 ,则 设, g是模m的原根. 设, 则是模m的原根当且仅当 如果模m有一个原根, 则模m有个不同的原根 5.2 原根存在的条件 设p为奇素数, 则模p的原根存在 设p为奇素数, 则对任意, 模原根存在, 更准确的说, 如果g是模原根, 则g也是模的原根 设, 的所有不同素因子是, 则g是模m的一个原根的充要条件是. (这给出了一个找原根的方法) 5.3 指标及n次剩余 设, g是模m的一个原根, , 则存在唯一的整数r使得成立, 称整数r以g为底的a对模m的一个指标, 记作(或) 设m是大于1的整数, a是与m互素的整数, 如果n次同余式有解, 则a叫做对模m的n次剩余, 否则, a叫做对模m的n次非剩余 第6章 群, 环, 域6.1 群 代数结构: 带有一种(或多种)运算的集合, 记为 所有的密码学变换总是在一些结构上 不同的代数结构满足不同的条件 群是满足如下条件的代数结构: G1: G2: G3: G4: G5, Abelian群, 交换群: 相关概念: 乘群: 加群: 群的阶: 群中元素的个数. 有限群, 无限群 群: 例子: , 半群 , 交换加群 , 不是交换乘群 , 交换加群 , 是交换乘群 , 是交换乘群 , 是交换乘群 加法逆一定存在, 乘法逆不一定存在 乘法逆: 当称为的乘法逆. 当且仅当, 存在. 引理: 若, 则 如何求: 在中寻找, 直到找到一个, 使得; 或者用扩展欧几里得算法(更好) 设有结合法. 如果G是一个群, 则方程在G中有解. 反过来, 如果上述方程在G中有解, 并且结合法满足结合律, 则G是一个群 设H是群G的一个子集合. 如果对于群G的结合法, H成为一个群, 那么H叫做群G的子群, 记作. 和都是群G的子群, 叫做群G的平凡子群. 如果H不是群G的平凡子群, 则群G的子群H叫做群G的真子群. 设H是群G的一个非空子集合. 则H是群G的子群的充要条件是: 对任意的, 有 设G是一个群, ${H_i}{i\\in I}是的一族子群则\\cap{i\\in I}H_i=H_1\\cap H_2\\cap\\dots\\cap H_n\\cap\\dots$是G的一个子群 6.2 环 环(“”是加法, “”是乘法)定义为: R1: (封闭律) R2: 是加法Abelian群 R3: R4: 设R是一个交换环, . 如果一个元素使得, 就称b整除a或者a被b整除, 记作. 这时, 把b叫做a的因子, 把a叫做b的倍元. 如果b, c都不是单位元, 就称b称为a的真因子. 如果R中元素p不是单位元, 且没有真因子, 则称p为不可约元或素元. 设R, R’是两个环. 我们称映射为环同态, 如果f满足如下条件: 对任意的, 都有 对任意的, 都有如果f是一对一的, 则称f为单同态; 如果f是满的, 则称f为满同态; 如果f是一一对应的, 则称f为同构 设R, R’是两个环, 如果存在一个R到R’的同构, 我们称R与R’同构 设, 是整除R上的任意两个多项式, 其中. 如果存在一个多项式使得等式成立, 就称整除, 记作. 这时, 把叫做的因式, 把叫做的倍式 设是整环R上的非常数多项式. 如果除了显然因式和外, 没有其他因式, 那么, 叫做不可约多项式. 否则, 叫做合式. 多项式是否可约于所在的环或域相关 设和是整环R上的多项式, 则存在和使得 设是整环R上的多项式, , 则存在多项式和常数使得 设是整环R上的多项式, , 则的充要条件是 类似整数, 多项式也有最大公因式和最小公倍式, 且有广义欧几里得除法(除到为止), 且有互素的概念 6.3 域 域定义为: F1: 是可交换环(ab=ba) F2: 关于乘法存在单位元e, F3: 对任何非零元, a有唯一的逆元 关系: 多项式环 如果R是一个可交换环, 则环R上的多项式表示为: , 这里且 若R是一个可交换环, 多项式环为系数取自R的所有x的多项式组成的 同余多项式 当且仅当时, 称a(x)和b(x)模p(x)同余, 记为 若, 则 模p(x)剩余类: R[x]的模p(x)剩余类的集合为{R[x] mod p(x)}(p(x)是R上的不可约多项式). R[x]的模p(x)剩余类的集合表示为R[x]/p(x) 不可约多项式 若a(x)=q(x)b(x), 则称a(x)可被b(x)整除, 记为b(x)|a(x) 若不存在多项式使得b(x)|p(x), 则称多项式p(x)在环R上不可约的 "},{"title":"计算机组成原理","date":"2021-05-18T23:03:17.000Z","url":"/2021/05/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/","categories":[["undefined",""]],"content":"第1章 计算机系统概论1.1 计算机系统简介1.1.1 计算机的软硬件概念 计算机系统由”硬件”和”软件”两大部分组成: 硬件: 指计算机的实体部分, 如主机, 外部设备等 软件: 由具有各类特殊功能的信息(程序)组成, 通常存放在计算机的主存或辅存内 计算机性能好坏取决于软硬件功能的组合 软件分为系统软件和应用软件: 系统软件: 用来管理整个计算机系统, 包括标准程序库, 语言处理程序, 操作系统, 服务程序, 数据库管理系统, 网络软件等 应用软件: 用户根据任务需要所编制的各种软件 1.1.2 计算机系统的层次结构 计算机的解题过程: 高级语言程序-&gt;翻译成机器语言程序-&gt;运行-&gt;结果 计算机系统的层次结构: 四级层次结构 多级层次结构 高级语言 虚拟机器 虚拟机器 用编译程序翻译成汇编语言程序 汇编语言 虚拟机器 虚拟机器 用汇编程序翻译成机器语言程序 操作系统 虚拟机器 虚拟机器 用机器语言解释操作系统 机器语言 实际机器 实际机器 用微指令解释机器指令 微指令系统 微程序机器 微程序机器 由硬件直接执行微指令 1.1.3 计算机组成和计算机体系结构 计算机体系结构: 能够被程序员所见到的计算机系统的属性, 即概念性的结构与功能特性. 属性包括指令集, 数据类型, 存储器寻址技术, I/O机理等 计算机组成原理: 如何实现计算机体系结构所体现的属性, 即具体指令的实现 1.2 计算机的基本组成1.2.1 冯诺伊曼计算机的特点 计算机由运算器, 存储器, 控制器, 输入设备和输出设备五大部件组成 指令和数据以同等地位存放于存储器内, 并可按地址寻访 指令和数据均用二进制数表示 指令由操作码和地址码组成, 操作码用来表示操作的性质, 地址码用来表示操作数在存储器中的位置 指令在存储器内按顺序存放. 通常, 指令是顺序执行的, 在特定条件下, 可根据运算结果或根据设定的条件改变执行顺序 机器以运算器为中心, 输入输出设备与存储器间的数据传送通过运算器来完成 1.2.2 计算机的硬件框图 冯诺依曼计算机以运算器为中心, 现代计算机以存储器为中心, 详见书P9 五大部件功能: 运算器用来完成算数和逻辑运算, 并将运算的中间结果暂存在运算器内 存储器用来存放数据和程序 控制器用来控制, 指挥程序和数据的输入, 运行以及处理运算结果 输入设备用来将人们熟悉的信息形式转换为机器能识别的信息形式 输出设备可将机器运算结果转换为人们熟悉的信息形式 运算器(ALU, 算术逻辑单元)和控制器(CU, 控制单元)合起来统称为中央处理器(CPU), 输入输出设备简称为I/O设备 现代计算机可认为由三大部分组成: CPU, I/O设备, 主存储器(MM). CPU与主存储器合起来称为主机, I/O设备又称为外部设备 存储器分为主存储器(主存)和辅助存储器(辅存) 1.2.3 计算机的工作步骤 上机前的准备: 建立数学模型, 确定计算方法, 编制解题程序 计算机的工作流程 主存储器 包括存储体M, 各种逻辑部件及控制电路等 存储体由许多存储单元组成, 每个存储单元又包括若干个存储元件, 每个存储元件能寄存一位二进制代码0或1 一个存储单元可存储一串二进制代码, 称这串二进制代码为一个存储字, 该位数成为存储字长. 存储单元按地址寻访 MAR: 存储器地址寄存器, 反映存储单元的个数. MDR: 存储器数据寄存器, 反映存储字长 运算器 运算器包括若干个寄存器和一个算术逻辑单元(ALU), 其中ACC为累加器, MQ为乘商寄存器, X为操作数寄存器, F为结果状态寄存器. 寄存器存放不同类别操作数情况如下: 寄存器 加法 减法 乘法 除法 ACC 被加数及和 被减数及差 乘积高位 被除数及余数 MQ 乘数及乘积低位 商 X 加数 减数 被乘数 除数 加法操作过程: [M]-&gt;X; [ACC]+[X]-&gt;ACC 减法操作过程: [M]-&gt;X; [ACC]-[X]-&gt;ACC 乘法操作过程: [M]-&gt;MQ; [ACC]-&gt;X; 0-&gt;ACC; [X]*[MQ]-&gt;ACC//MQ (“//“表示两个寄存器串接) 除法操作过程: [M]-&gt;X; [ACC]/[X]-&gt;MQ; 余数R放在ACC中 控制器 分为取指过程, 分析过程, 执行过程三个阶段 控制器由程序计数器(PC), 指令寄存器(IR)以及控制单元(CU)组成 PC用来存放当前欲执行指令的地址, 与MAR直接相连, 具有自动加1(计数)的功能, 即可自动形成下一条指令的地址 IR用来存放当前的指令, 内容来自MDR. IR操作码送至CU记作OP(IR)-&gt;CU, 用来分析指令. 其地址码作为操作数地址送至MAR, 记作Ad(IR)-&gt;MAR CU用来分析当前指令所需完成的操作, 并发出各种微操作命令序列, 用以控制所有被控对象 计算机工作的全过程举例: 见书P16 1.3 计算机硬件的主要技术指标1.3.1 机器字长 机器字长是指CPU一次能处理数据的位数, 通常与CPU的寄存器位数有关 1.3.2 存储容量 主存容量是指主存中存放二进制代码的总位数, 即: 存储容量=存储单元个数*存储字长. 现代计算机中长以字节数来描述容量大小 辅存容量通常用字节数来表示 1.3.3 运算速度 运算速度与许多因素有关, 如机器的主频, 执行什么样的操作, 主存本身的速度等 吉普森法: 综合考虑每条指令的执行时间以及它们在全部操作中所占的百分比, 即, 其中, 为机器运行速度; 为第i种指令占全部操作的百分比书; 为第i种指令的执行时间 现在机器的运算速度普遍采用单位时间内执行指令的平均条数来衡量. 单位: MIPS, 百万条指令每秒 CPI, 执行一条指令所需的时钟周期(机器主频的倒数) FLOPS, 浮点运算次数每秒 第3章 系统总线第4章 存储器4.1 概述4.1.1 存储器分类 按存储介质分类 半导体存储器: 分为TTL与MOS. 优点体积小, 功耗低, 存取时间短. 易失性存储器, 也有非易失性 磁表面存储器: 磁头+载磁体, 非易失性 磁芯存储器: 硬磁材料做成环状原件, 非易失性 光盘存储器: 激光, 磁光材料, 非易失性 按存储方式分类 随机存储器(RAM): 特点是存储器的任何一个存储单元的内容都可以随机存储, 而且存取时间与存储单元的物理地址无关. 为计算机主存采用. 分为静态RAM(SRAM)与动态RAM(DRAM) 只读存储器(ROM): 能对其存储的内容读出, 而不能对其重新写入. 与RAM可共同作为主存的一部分. 依据发展历程可分为掩膜型只读存储器(MROM), 可编程只读存储器(PROM), 可擦除可编程只读存储器(EPROM), 电擦除可编程只读存储器(EEPROM). 近年来还出现闪速存储器(Flash Memory) 串行访问存储器: 需按其物理位置的先后顺序寻找地址. 顺序存取存储器: 如磁带, 直接存取存储器: 如磁盘 按在计算机中的作用分类 主存储器: 可以和CPU直接交换信息 辅助存储器: 用来存放当前暂时不用的程序和数据, 不能与CPU直接交换信息 缓冲存储器: 用在两个速度不同的部件之中, 比如CPU与主存之间 综合分类 主存 随机存储器(RAM): 静态RAM, 动态RAM 只读存储器(ROM): MROM, PROM, EPROM, EEPROM 闪速存储器(Flash Memory) 辅存: 磁盘, 磁带, 光盘 缓存(Cache) 4.1.2 存储器的层次结构 存储器三个主要特性的关系: 速度越快, 容量越小, 价格越高; 速度越慢, 容量越大, 价格越低 缓存-主存层次和主存-辅存层次: CPU和缓存, 主存都能直接交换信息; 缓存能直接和CPU, 主存交换信息; 主存可以和CPU, 缓存, 辅存交换信息 缓存-主存层次主要解决CPU和主存速度不匹配的问题, 主存-辅存层次主要解决存储系统的容量问题 二者解决了速度, 容量, 成本这三者的矛盾. 在主存-辅存这一层次的不断发展中, 逐渐形成了虚拟存储系统 4.2 主存储器4.2.1 概述 主存的基本组成: 主存除了包含存储体, MAR, MDR外, 还需地址译码, 驱动等电路. 详见书P72 主存与CPU的联系: MDR与主存的数据总线是双向的, 地址总线是MAR指向主存且单向的, 读写由CPU控制, 详见书P73 主存中存储单元地址的分配: 主存中各存储单元的空间位置是由单元地址号来表示的. 常用8位二进制数表示一个字节. 通常计算机系统既可按字寻址, 也可按字节寻址. 字地址可能是字节地址的高位, 也可能是字节地址的低位. 如对24位地址线的主存而言, 按字节寻址的范围是, 若字长为32位, 按字寻址范围是, 若字长为16位, 按字寻址范围是8M. 但这两者的按字节寻址的范围仍是16M 主存的技术指标 存储容量: 指主存能存放二进制代码的总位数, 存储容量=存储单元个数*存储字长(若用字节数表示再除以8) 存储速度:由存取时间和存取周期来表示的 存取时间: 又称为存储器的的访问时间, 指启动一次存储器操作到完成该操作所需的全部时间. 分为读出时间和写入时间 存取周期: 指存储器进行连续两次独立的存取器操作所需的最小间隔时间 存储器带宽: 表示单位时间内存储器存取的信息量, 单位用字/秒或字节/秒或位/秒表示. 提高存储器的带宽, 可以缩短存取周期, 增加存储字长, 增加存储体 4.2.2 半导体存储芯片简介4.2.3 随机存取存储器4.3 高速缓冲存储器第5章 输入输出系统5.1 概述5.1.1 输入输出系统的发展状况 早期阶段: 分散连接, CPU和I/O设备串行工作, 程序查询方式 接口模块和DMA阶段: 总线连接, CPU和I/O设备并行工作, 分为中断方式和DMA方式 具有通道结构的阶段 具有I/O处理机的阶段 5.1.2 输入输出系统的组成 I/O软件(主要任务: 将用户编制的程序(或数据)输入主机内, 将运算结果输送给用户, 实现输入输出系统与主机工作的协调等) I/O指令: 机器指令的一类, CPU指令的一部分, 一般格式为操作码+命令码+设备码, 操作码用来判断是I/O指令还是其他指令, 命令码是对I/O设备的具体操作, 设备码指明是哪个设备 通道指令: 通道自身的指令, 指明传送的数据组在主存的首地址, 字节数或末地址, 设备码和命令码 I/O硬件: 在带有接口的I/O设备中, 一般包括接口模块和I/O设备. 一个通道可以和一个以上的设备控制器相连, 一个设备控制器又可以控制若干台同一类型的设备 5.1.3 I/O设备与主机的连接方式 I/O设备的编址方式: 统一编址和不统一编制 统一编址: 将I/O地址看作存储器地址的一部分, 指令与访存指令类似(用取数, 存数指令) 不统一编制: I/O地址和存储器是分开的, 有专用的I/O指令 设备寻址: 由I/O指令的设备码, 通过设备选择电路选中设备 传送方式: 串行(速度慢, 数据线少, 如远距离通信)和并行(速度快, 数据线多). 实际还有串并联用的接口 联络方式 立即响应方式: 只要I/O指令一到, 设备就立即响应, 无需特殊的联络信号, 可用于一些工作速度十分缓慢的I/O设备 异步工作采用应答信号联络: 当I/O设备与主机工作速度不匹配时, 通常采用异步工作方式. 分为并行和串行传送, 详见课本P160 同步工作采用同步时标联络: 要求I/O设备与CPU工作完全同步 I/O设备与主机的连接方式: 辐射式和总线式. 辐射式要求有控制线和信号线, 对I/O设备的增删都比较困难; 总线式通过一组总线连接, 便于增删设备 5.1.4 I/O设备与主机信息传送的控制方式 程序查询方式: 一启动I/O设备, CPU就不断查询设备准备情况. 使CPU和I/O设备处于串行工作状态, CPU工作效率不高, 详见课本P161-162 程序中断方式: CPU启动I/O设备后不查询设备并继续执行自身程序, 当设备准备就绪并向CPU发出中断请求后才予以响应. CPU和I/O并行工作. 相比于程序查询方式, CPU得到充分的利用, 详见课本P162-163 直接存储器存取方式(DMA): I/O设备直接与主存交换信息而不占用CPU, CPU和I/O并行工作. 详见P163 I/O通道方式 I/O处理机方式 5.3 I/O接口5.3.1 概述 为什么要设置接口: 实现设备的选择, 实现数据缓冲达到速度匹配, 实现数据串-并格式转换, 实现电平转换, 传送控制命令, 反映设备的状态(“忙, 就绪, 中断请求”) 5.3.2 接口的功能和组成 总线连接方式的I/O接口电路 数据线: 传送数据代码, 根数一般等于存储字长的位数或字符的位数. 单向的需要两组, 双向的只需一组 设备选择线: 传送设备码, 根数取决于设备码的位数. 单向的需要两组, 双向的只需一组 命令线: 传输来自CPU的各种命令, 是一组单向总线, 根数与命令信号多少有关 状态线: 将设备状态报告给主机, 一组单向总线 接口的功能和组成 选址功能: 通过设备选择电路实现 传送命令的功能: 设有命令寄存器, 命令译码器实现 传送数据的功能: 设有数据缓存寄存器 反映I/O设备工作状态的功能: 设有一些反映设备工作状态的触发器: 完成触发器D, 工作触发器B, 中断请求触发器INTR, 屏蔽触发器MASK 5.3.3 接口类型 按数据传送方式分为并行和串行接口. 对串行接口而言, 其内部还须设有串-并转换装置 按功能选择的灵活性分类分为可编程和不可编程接口 按照通用性分类分为通用接口和专用接口 按照数据传送的控制方式分为程序型和DMA型接口 5.4 程序查询方式5.4.1 程序查询流程5.4.2 程序查询方式的接口电路5.5 程序中断方式5.5.1 中断的概念5.5.2 I/O中断的产生5.5.3 程序中断方式的接口电路5.5.4 I/O处理中断的过程5.5.5 中断服务程序的流程5.6 DMA方式5.6.1 DMA方式的特点5.6.2 DMA接口的功能和组成5.6.3 DMA的工作流程5.6.4 DMA接口的类型第6章 计算机的运算方法6.1数的定点表示: 小数: [], 整数: [变形补码: 补或在用变形补码作加法时, 2位符号位要连同数值部分一起参加运算, 而且高位符号位产生的进位自动丢失, 便可得正确结果移码表示法: 移码就是在真值上加上(n为整数位数), 即定义为移将补码的符号位01置换即可得到移码 6.2浮点数表示: 先将浮点数规格化,即小数点前为零, 后面不为零浮点数在机器中的表示形式, 小数点在数符前后例: 设浮点数16位, 阶码5位(含阶符), 尾数11位(含数符), 将+13/128写成二进制定点数和浮点数答: 该数二进制表示: 0.0001101000, 即定点数表示. 浮点数规格化: , 浮点数原码: 1|0011||0|1101000000, 浮点数补码: 1|1101||0|1101000000 6.36.3.1 移位运算有符号数移位为算术移位, 无符号数移位为逻辑移位算术移位原则: 移位时符号位不变 正数移位补0 负数原码移位补0, 反码移位补1, 补码左移补0, 右移补1 逻辑移位: 不考虑符号位, 移位补0 6.3.2 加法与减法运算现代计算机中都采用补码作加减法运算加减法基本公式: 整数: 补补补, 补补补补 小数: 补补补, 补补补补 在做补码加减法时,只需将符号位和数值部分一起参加运算, 并且将符号位产生的自然进位丢掉即可溢出判断: 用一位符号位判断溢出: 实际参加操作的两个数(减法时及被减数和”求补”以后的减数)符号相同, 结果与原操作数的符号不同, 即为溢出. 在计算机中, 通常用符号位产生的进位与最高有效位产生的进位异或操作, 结果为1为溢出 用两位符号位判断溢出: 结果的双符号位相同为未溢出, 结果的双符号位不同为溢出, 最高符号位代表其真正的符号 6.3.3 乘法运算 二进制乘法可以按照十进制乘法计算, 不过对机器不友好 笔算乘法的改进: 如0.1101*0.1011通过提取公因式可变为加法和移位的运算, 即: ((((0.0000 + 0.1101 * 1) &gt;&gt; 1 + 0.1101 * 1) &gt;&gt; 1 + 0.1101 * 0) &gt;&gt; 1 + 0.1101 * 1) &gt;&gt; 1(只是形象描述) 原码乘法 原码一位乘运算规则: 设原, 原, $[x]_原*[y]原=x_0\\oplus y_0.(0.x_1x_2\\dots x_n)(0.y_1y_2\\dots y_n)分别记作x^*,y^*(x^*)(y^)=2^{-1}(y_1x^*+2^{-1}(y_2x^*+2^{-1}(\\dots+2^{-1}(y{n-1}x^*+2^{-1}(y_nx^*+0))\\dots)))$ (右移操作均为逻辑右移) 原码一位乘所需硬件配置: 见书 原码一位乘控制流程: 见书 原码两位乘(可以提高运算速度): 见书 补码乘法 补码一位乘运算规则(设被乘数补, 乘数补) 被乘数符号任意, 乘数符号为正: 按照原码乘法规则, 不过加和移位按补码规则算 被乘数符号任意, 乘数符号为负: 把乘数补码补去掉符号位, 当成一个正数与补相乘, 然后加上补进行校正 被乘数与乘数符号均任意(Booth算法): $[x*y]补=[x]补[(y_1-y_0)+(y_2-y_1)2^{-1}+\\dots+(y{n+1}-y_n)2^{-n}]其中y{n+1}=0$ 第7章 指令系统第8章 CPU的结构和功能第9章 控制单元的功能第10章 控制单元的设计"},{"title":"阅读笔记","date":"2021-05-12T14:43:10.000Z","url":"/2021/05/12/%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","categories":[["undefined",""]],"content":"Poison Over Troubled Forwarders: A Cache Poisoning Attack Targeting DNS Forwarding Devices1 概述文中介绍了一种新型的针对DNS Forwarder也就是DNS Forwarder的缓存投毒攻击. 通过这种攻击方式, 攻击者可以向DNS Forwarder中注入任意的受害域名, 将用户指引到恶意站点, 并且可以规避目前的缓存投毒防御措施. 2 DNS ForwarderDNS Forwarder, 即DNS转发器, 在传统的DNS解析架构中不存在DNS Forwarder, 而目前DNS Forwarder应用十分广泛. 在最新的文件(RFC 8499)中, DNS Forwarder位于存根解析器与递归解析器之间. 当DNS Forwarder接收到查询请求时，它不递归地执行解析，而只是将查询转发到上游的递归解析器. 它无需对DNS客户端的查询请求进行递归解析, 只是起转发的作用; 而且其在安全性上依赖于上游的递归解析器, 不会对response进行检查, 这也是DNS Forwarder的一个关键弱点, 这个特性使得针对DNS Forwarder的缓存投毒攻击成为可能. 3 先前的DNS缓存中毒攻击 伪造攻击 碎片整理攻击 4 针对DNS Forwarder的碎片整理攻击4.1 攻击模型概述攻击模型: 假设攻击者与DNS Forwarder位于同一局域网中. 攻击者向被自己控制的域进行缓存中毒攻击, 来验证DNS Forwarder是不会进行响应包的安全校验的, 它对响应包的安全性判断完全依赖于它上游的递归解析器. 攻击流程: 首先要探测IPID. 然后构造数据包的第二个分片, 包含一条伪造的A记录, 将IP地址指向攻击者的IP地址. 接着, 攻击者查询a.attacker.com的IP地址. 最后, 攻击者控制的权威域名解析器会在响应包中插入很多CNAME记录(CNAME链), 导致相应包会被递归解析器分片转发. 当第一片数据包发送到DNS Forwarder时, 会和之前构造的第二个分片组合. 由于DNS Forwarder不会不会对数据包进行检查, 并且第二个分片中不包含DNS会话标识和端口号等元数据, 使得攻击变得容易且难以检查. 4.2 DNS响应碎片构造主要构造方法: 构造很多的CNAME记录(CNAME链)，例如: ————-第一个分片————-a.attacker.com CNAME b.attacker.comb.attacker.com CNAME c.attacker.comc.attacker.com CNAME d.attacker.com…————-第二个分片————-x.attacker.com CNAME y.attacker.comy.attacker.com CNAME z.attacker.comz.attacker.com A x.x.x.x 攻击者构造的第二个分片: x.attacker.com CNAME y.attacker.comy.attacker.com CNAME victim.comvictim.com A a.t.k.r 构造的响应包应该大于1500字节，保证在递归解析器被分片.对于上游的递归解析器来说, 它们看到的是来自权威域名解析器的超大dns响应包, 经过校验并不违反bailiwick规则, 所以递归解析器就将这个超大响应包以分片的方式转发给DNS Forwarder了.使用这种超大DNS数据包响应需要攻击场景中的所有DNS服务器都支持DNS扩展名机制, 在DNS数据包头部中添加了一个OPT字段来标记该数据包是否携带EDNS选项. 4.3 构造欺骗分片虽然构造第二个分片无需预测DNS和UDP报头中的端口号和会话标识等元数据，但还需预测IPID, 这样才能够与第一个分片成功组合.目前一共有三种IPID分配方法: 全局IPID计数器每发送一个数据包就增加一个, 这是高度可预测的. 基于哈希的IPID计数器首先使用哈希函数将输出数据包映射到IPID计数器阵列中的一个, 然后将选定的计数器随机增加一个值, 该值从1到自上次使用相同计数器的数据包传输以来的系统节拍数(通常为毫秒)之间的均匀分布中选择. 如果两个探测器在时间上足够接近, 那么响应的IPID增量是非常可预测的. 哈希函数根据发送数据包的源和目标IP地址确定使用哪个IPID计数器(因此, 相同的源和目标IP对将始终导致选择相同的IPID计数器). 随机IPID分配在本论文的攻击中, 攻击者可以首先探测上游解析器的当前IPID值, 并使用一个或多个预测的IPID来放置欺骗的第2个片段. 探测响应和第一个片段都被发送到局域网的”NAT-ed”公共地址, 因此它们保证在上游解析器上使用相同的IPID计数器. 当攻击者启动整个数据包序列并控制这些数据包的定时时, 它可以确保初始IPID和后一个(在解析器的响应中)之间的间隔足够小, 因此是可预测的(因为它们在时间上是很接近的, 例如相隔几毫秒). 4.4 攻击条件成功实施攻击的必要条件为EDNS(0)的支持, 不截断DNS响应, 没有DNS响应的验证以及DNS缓存的记录. 5 易受攻击的软件6 对问题的反思7 攻击模型的扩大(针对LAN)以及缓解措施DNS Cache Poisoning Attack Reloaded: Revolutions with Side Channels1 攻击原理在2008年的Kaminsky的经典的缓存中毒攻击中, DNS数据包中的源端口是固定的(53端口), 因此攻击者只需要爆破TxID即可, TxID为16bit, 即种可能. 不过从那时起, 为了增加防御性, DNS解析器采取了源端口随机化, 即若仍使用上述方法攻击, 则需要同时爆破源端口和TxID两个字段, 两个字段都是16bit, 即一共有种可能, 这在目前是不太可能实现的. 为了解决上述问题(主要是源端口随机化问题), 作者提出了一种分治思想, 先通过ICMP侧信道探测开放的端口, 后猜测相应TxID, 一共种可能. 同时，相应的扩大攻击窗口时间, 使得这种攻击方式更加容易. 2 攻击概述攻击模型: 主要目标是DNS转发器以及DNS解析器. 假设攻击者不能窃取DNS Forwarder和DNS Resolver之间的流量, 但有IP欺骗能力, 即为一个偏离信道的攻击者. 攻击者还应与受害者处于同一局域网中. 此外, 攻击者需要控制能够从转发器或解析器中触发请求的机器. 攻击流程: 首先从触发一个攻击开始发送DNS查询, 然后是推断源端口以及扩大攻击窗口. 利用侧通道来扫描和发现用于DNS查询的端口, 同时针对不同的转发器和解析器攻击，可大大扩展攻击窗口. 4 推断源端口对于ICMP限制，有三种种克服方法: 攻击者有多个IP或者有IPv6, 通过DHCP请求多个地址和借助IP欺骗. 同时通过观察源码发现, ICMP速率限制是在IP速率限制之前进行验证的. 所以, 即使最后一个IP只返回一个ICMP响应包. 分治方法主要是二分法查找端口. 在每轮的二分查找中，总是先探寻左半部分. 假设解析器的ICMP速率限制为 50/20ms, 攻击者通过伪造权威域名服务器的IP, 向解析器发送50个探测UDP报文, 那么攻击者以自己的IP再向解析器发送一个UDP报文, 如果没收到任何ICMP回复, 说明已达到ICMP速率限制, 可进行下一个20ms的探测, 不断循环. 如果此时收到回复, 说明至少有一个端口是开放的, 则继续搜索左半部分, 否则搜索右半部分. 5 扩大攻击窗口这里主要讨论了扩大DNS转发器和解析器的攻击窗口 对于DNS转发器，可以通过攻击者先查询自己的域地址, 而名称服务器配置为无响应, 或者让攻击者拥有权威域名服务器并以缓慢的速度响应CNAME记录, 以增加等待时间. 而对于DNS解析器, 可以通过发送大量的DNS查询来淹没权威域名服务器, 类似于攻击者伪造解析器, 发送大量DNS query, 高于配置限制的速率(服务器上配置的RRL), 会权威域名服务器不发送响应, 创建足够高的丢失率. 6 实际攻击时应考虑的问题对于解析器缓冲区而言, 可能已经拥有某条记录, 但攻击者不得不等待这条记录消失之后, 再发动攻击, 即TTL表示这条记录的生存时间. 7 防御"},{"title":"毛概","date":"2021-03-15T23:01:36.000Z","url":"/2021/03/15/%E6%AF%9B%E6%A6%82/","categories":[["undefined",""]],"content":"绪论 中国共产党领导下的新民主主义革命、社会主义革命、社会主义建设与改革的基本规律与经验总结，这是马克思主义与中国实际相结合的产物，是中国革命与现代化建设的指导思想，也是我国主流意识形态 1938年10月，毛泽东同志在党的六届六中全上作的题为《论新阶段》的政治报告中最先提出“马克思主义中国化”这个命题。他强调指出：马克思主义的中国化，使之在其每一表现中带着中国的特性，即是说，按照中国的特点去应用它，成为全党亟待了解并亟须解决的问题。 题目： 在中国革命、建设、改革的历史进程中,马克思主义中国化实现了两次历史性飞跃。第二次历史性飞跃发生在(社会主义进入改革开放的新时期) 毛泽东向全党明确提出“马克思主义中国化”的历史任务是在(八七会议) 在中国特色社会主义理论体系中具有开创性作用的理论是(邓小平理论) 马克思主义中国化的最新理论成果是(习近平新时代中国特色社会主义思想) 马克思主义中国化的基本要求是(把马克思主义基本原理同中国具体实际和时代特征结合起来) 第一章 毛泽东思想及其历史地位 毛泽东思想形成和发展的时代条件：19世纪末20世纪初，世界进入帝国主义和无产阶级革命时代；第二次世界大战以后 形成阶段：建党(1921)~遵义会议(1935) 成熟阶段：遵义会议(1935)~党的七大(1945) 继续发展阶段：党的七大(1945)~ 题目： 毛泽东思想形成的时代条件是(帝国主义战争和无产阶级革命) 毛泽东思想形成的实践基础是(中国共产党领导的革命和建设实践) 最早对毛泽东思想的科学涵义进行完整界定的中央文件(《关于建国以来党的若干历史问题的决议》) 毛泽东思想提出的一系列相互联系的理论观点所构成的完整的科学思想体系中,紧紧围绕的主题是(中国革命和建设) 毛泽东思想趋于成熟的标志性事件是(1945年,党的七大) "}]